import os
import discord
from dotenv import load_dotenv, find_dotenv
import deepl

load_dotenv(find_dotenv())
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

DEEPL_TOKEN = os.getenv("DEEPL_TOKEN")
translator = deepl.Translator(DEEPL_TOKEN)

intents = discord.Intents.default()
intents.members=True
intents.message_content=True

#all available DeepL languages, not every language has a emoji though
flags = {
"ğŸ‡¦ğŸ‡·": "ar", # Argentinien (Argentina)
"ğŸ‡§ğŸ‡¬": "bg", # Bulgarien (Bulgaria)
"ğŸ‡¨ğŸ‡¿": "cs", # Tschechien (Czech Republic)
"ğŸ‡©ğŸ‡°": "da", # DÃ¤nemark (Denmark)
"ğŸ‡©ğŸ‡ª": "de", # Deutschland (Germany)
"ğŸ‡¬ğŸ‡·": "el", # Griechenland (Greece)
"ğŸ‡¬ğŸ‡§": "en-gb", # Vereinigtes KÃ¶nigreich (United Kingdom)
"ğŸ‡ºğŸ‡¸": "en-us", # US
"ğŸ‡ªğŸ‡¸": "es", # Spanien (Spain)
"ğŸ‡ªğŸ‡ª": "et", # Estland (Estonia)
"ğŸ‡«ğŸ‡®": "fi", # Finnland (Finland)
"ğŸ‡«ğŸ‡·": "fr", # Frankreich (France)
"ğŸ‡­ğŸ‡º": "hu", # Ungarn (Hungary)
"ğŸ‡®ğŸ‡©": "id", # Indonesien (Indonesia)
"ğŸ‡®ğŸ‡¹": "it", # Italien (Italy)
"ğŸ‡¯ğŸ‡µ": "ja", # Japan
"ğŸ‡°ğŸ‡·": "ko", # SÃ¼dkorea (South Korea)
"ğŸ‡±ğŸ‡¹": "lt", # Litauen (Lithuania)
"ğŸ‡±ğŸ‡»": "lv", # Lettland (Latvia)
"ğŸ‡³ğŸ‡´": "nb", # Norwegisch (BokmÃ¥l) (Norwegian BokmÃ¥l)
"ğŸ‡³ğŸ‡±": "nl", # Niederlande (Netherlands)
"ğŸ‡µğŸ‡±": "pl", # Polen (Poland)
"ğŸ‡µğŸ‡¹": "pt", # Portugal (Portugal - all Portuguese varieties mixed)
"ğŸ‡·ğŸ‡´": "ro", # RumÃ¤nien (Romania)
"ğŸ‡·ğŸ‡º": "ru", # Russland (Russia)
"ğŸ‡¸ğŸ‡°": "sk", # Slowakei (Slovakia)
"ğŸ‡¸ğŸ‡®": "sl", # Slowenien (Slovenia)
"ğŸ‡¸ğŸ‡ª": "sv", # Schweden (Sweden)
"ğŸ‡¹ğŸ‡·": "tr", # TÃ¼rkei (Turkey)
"ğŸ‡ºğŸ‡¦": "uk", # Ukraine
"ğŸ‡¨ğŸ‡³": "zh", # China
}


class MyClient(discord.Client):    

    async def on_ready(self):
        print("Logged in as {}".format(client.user.name))
        await client.change_presence(activity=discord.Game("DeepL"), status=discord.Status.online)

    async def on_message(self, message):
        if message.author == client.user:
            return
        print(f'Message from {message.author}: {message.content}')

    async def on_reaction_add(self,reaction,user):
        print(f'{user} reacted with emoji {reaction.emoji} on {reaction.message.content}')

        if reaction.emoji in flags:
            lang = flags[reaction.emoji]
            print(f'Emoji is the flag of {lang}')
            await reaction.message.reply(translator.translate_text(reaction.message.content, target_lang=lang),mention_author=True)
        else:
            print('No flag found')
            
client = MyClient(intents=intents)
client.run(DISCORD_TOKEN)
